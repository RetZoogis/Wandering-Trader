#Backend 
trigger:
- main

pr:
- main

pool:
  vmImage: ubuntu-latest

variables: #Path to folders
  sDir: 'P2-Store'
  solution: 'P2-Store/*.sln'

stages:
- stage: Installs
  #Runs NuGet and NPM Installs
  jobs:
    - job: NuInstall
      displayName: NuGet Install-Restore
      steps:
      #Install
      - task: NuGetToolInstaller@1
        inputs:
          checkLatest: true
      #Restore
      - task: NuGetCommand@2
        inputs:
          restoreSolution: $(solution)
- stage: DotNet_Sonar
  jobs:
  #Prepare the sonar cloud
    - job: Scanner
      displayName: 'Run Sonar Analysis'
      steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'P2 Scanner'
          organization: '210726-wvu-net-ext'
          scannerMode: 'MSBuild'
          projectKey: '210726-wvu-net-ext_Group3-P2'
          projectName: 'Group3-P2'
          extraProperties: 'sonar.exclusions=**/lib/**/*'
  # DotNet Build and Test Here
      # Force dotnet 5
      - task: UseDotNet@2
        displayName: Dotnet SDK 5
        inputs:
          packageType: 'sdk'
          version: '5.x'
      #Build
      - task: CmdLine@2
        displayName: Dotnet Build
        inputs:
          script: 'dotnet build --configuration Release'
          workingDirectory: $(sDir)
      #Test
      - task: CmdLine@2
        displayName: Dotnet Tests
        inputs:
          script: 'dotnet test --configuration Release'
          workingDirectory: $(sDir)
  #Finial Sonar Steps
      # Force dotnet 3.1
      - task: UseDotNet@2
        displayName: Dotnet SDK 3
        inputs:
          packageType: 'sdk'
          version: '3.1.x'
      #Build
    #Analyze
      - task: SonarCloudAnalyze@1
        displayName: 'Run SonarCloud analysis'
    #Publish
      - task: SonarCloudPublish@1
        displayName: 'Publish results on build summary'
  #Publish and Deploy
- stage: Publish_Artifact
  jobs:
    - job: Publish
      displayName: 'Dotnet Publish'
      steps:
    #Publishes dotnet to staging dir
      - script: dotnet publish
          --configuration Release
          --output $(Build.StagingDirectory)
        workingDirectory: $(sDir)
    #Publishes Artifact to Azure
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'StoreApp'
          publishLocation: 'Container'